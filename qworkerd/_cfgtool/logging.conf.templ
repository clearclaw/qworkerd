[loggers]
keys = boto, kombu, logtool, root

[handlers]
keys = console, console_colour, syslog

[formatters]
keys = generic, colour

[logger_root]
level = ${qworkerd.log_level}
handlers = ${qworkerd.log_handler}

[logger_logtool]
level = ${qworkerd.log_level_logtool}
handlers = ${qworkerd.log_handler}
qualname = logtool
propagate = 0

[logger_boto]
level = WARN
handlers = ${qworkerd.log_handler}
qualname = boto
propagate = 0

[logger_kombu]
level = WARN
handlers = ${qworkerd.log_handler}
qualname = kombu
propagate = 0

[handler_console]
class = StreamHandler
level = ${qworkerd.log_level}
formatter = generic
args = ()

[handler_console_colour]
class = rainbow_logging_handler.RainbowLoggingHandler
stream = sys.stderr
level = ${qworkerd.log_level}
args = (sys.stderr, "")

[handler_syslog]
class = handlers.SysLogHandler
level = ${qworkerd.log_level}
formatter = generic
args = (("${qworkerd.syslog_host}", handlers.SYSLOG_UDP_PORT), handlers.SysLogHandler.LOG_${qworkerd.syslog_facility})

[formatter_generic]
class = logging.Formatter
format = %(asctime)s %(processName)s[%(process)d] %(levelname)s <%(module)s:%(funcName)s(%(lineno)d)> %(message)s
datefmt = %Y-%m-%d %H:%M:%S
use_color = 0

[formatter_colour]
class = logging.Formatter
format = %(asctime)s %(levelname)s <%(name)s::%(module)s:%(funcName)s(%(lineno)d)> %(message)s
datefmt = %Y-%m-%d %H:%M:%S
use_color = 1
